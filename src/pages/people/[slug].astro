---
import type { GetStaticPaths } from "astro";
import Layout from "../../layouts/Layout.astro";
import Breadcrumbs from "../../components/page-blocks/Breadcrumbs.astro";
import { loadFromCMS } from "../../cms/loadFromCMS";
import Code from "astro/components/Code.astro";
import PersonHero from "../../components/page-blocks/PersonHero.astro";
import CardFeed from "../../components/page-blocks/CardFeed.astro";
import type { PersonPage } from "../../types/pageTypes";
const { slug } = Astro.params;
export const getStaticPaths = async () => {
  const people = await loadFromCMS({ query: 'page("people").children' });
  // personId is a path ie 'people/_____'
  return people.map((personId: string) => {
    const personSlug = personId.split("/")[1];
    return { params: { slug: personSlug } };
  });
};

const content: PersonPage = await loadFromCMS({
  query: `page('people/${slug}')`,
  select: {
    uuid: true,
    displayname: true,
    bio: true,
    pronouns: true,
    location: true,
    organizationname: true,
    taxonomy: { query: "page.taxonomy.toObject" },

    role: true,
    level: true,
    email: true,
    orcid: true,
    urls: true,
    tags: true,

    photo: {
      // pattern to check if photo exists before attempting to size it on the server
      query: `page('people/${slug}').photo.isNotEmpty ? page('people/${slug}').photo.toFile.crop(384,384) : null`,
    },
    relatedPages: {
      query: `site.index.children.filterBy('author','*=',page.uuid)`,
      select: {
        author: {
          query: "page.author.toPage",
          select: ["displayname", "organizationname", "location"],
        },
        hero: {
          query: "page.hero.safeResize(600)",
          select: ["url", "width", "height"],
        },
        id: true,
        title: true,
        slug: true,
        type: true,
      },
    },
  },
});
console.log(content);
---

<Layout title={`Person: ${content.displayname}`}>
  <Breadcrumbs
    items={[
      { title: "People", url: "/people/" },
      { title: content.displayname },
    ]}
  />
  <PersonHero data={content} />
  <h2>About {content.displayname}</h2>
  <Fragment set:html={content.bio} />
  <h2>Content</h2>
  <p>These are articles and lessons submitted by {content.displayname}.</p>

  <CardFeed pageData={content.relatedPages} />
</Layout>

<style></style>
